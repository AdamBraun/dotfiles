echo "loading zshrc"
echo "loading{ 
    zgen,
    load oh-my-zsh,
    oh-my-zsh/git, 
    zsh-users/zsh-syntax-highlight
}"
source ~/.zgen/zgen.zsh
if ! zgen saved; then
    zgen oh-my-zsh
    zgen load zsh-users/zsh-syntax-highlighting
    zgen oh-my-zsh plugins/git
    zgen load wting/autojump
fi
#unset SET_CUSTOM_PROMPT value if you want to test other prompt than 
#the custom in ~/.dotFiles/prompt 
SET_CUSTOM_PROMPT=true

echo "loading autojump"
source ~/.zgen/wting/autojump-master/bin/autojump.zsh

export LSCOLORS=GxFxCxDxBxegedabagaced #better colors for ls

autoload zmv # => pg 88 Learning Shell scripting with ZSH
setopt HIST_VERIFY # !! => copy cmd from history before executing

export PATH="$PATH:$HOME/.rvm/bin:$HOME/.bin" # Add RVM to PATH for scripting
echo "loading rvm"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

[ -s ~/.nvm/nvm.sh ] && source ~/.nvm/nvm.sh
export NVM_NODEJS_ORG_MIRROR=http://nodejs.org/dist

#this doesn't seem to work here... need to learn more
ZDOTDIR='~/.dotFiles/zsh'

###########################################################################################################################
for f in ~/.dotFiles/* #foreach file in directory 
do
    #if its a normal file (-f) then log and source it
    [[ -f $f ]] && echo loading $f && source $f 
done

###########################################################################################################################
# completion
autoload -U compinit
compinit
# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending
zstyle ':completion:*' verbose yes #pg 96 =>Learning Shell Scripting with ZSH
#zstyle ':completion:*' format %d =>pg 94 Learning Shell Scripting with ZSH
###########################################################################################################################
#SET COLORS IN MAN PAGES
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;33;246m'   # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

###########################################################################################################################
#see more iterm key binding at http://stackoverflow.com/questions/6205157/iterm2-how-to-get-jump-to-beginning-end-of-line-in-bash-shell/29403520#29403520
bindkey -e #see pg 50 of "Learning Shell Scripting with zsh"
bindkey '[C' forward-word #alt->
bindkey '[D' backward-word #alt<-
bindkey "^[[3~" delete-char-or-list #backspace
bindkey '\e[A' history-beginning-search-backward #search history match already typed ==> pg 67indkey '\e[B' history-beginning-search-forward
#bindkey '^Q' push-line-or-edit #see pg 67 of Learning Shell Scripting with ZSH
#bindkey '\eQ' push-line-or-edit #see pg 67 of Learning Shell Scripting with ZSH
PATH=$(echo $PATH | tr ':' '\n' | sort | uniq | tr '\n' ':')
#clear
