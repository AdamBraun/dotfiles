echo "loading .zshrc"
source ~/.dotFiles/antigen/antigen.zsh
antigen use oh-my-zsh
#antigen bundle robbyrussell/oh-my-zsh lib/
antigen bundle zsh-users/zsh-syntax-highlighting
 antigen bundle git
antigen-bundle wting/autojump
# antigen theme gozilla
# antigen theme robbyrussell
antigen apply

source ~/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-wting-SLASH-autojump.git/bin/autojump.zsh

alias vim='/usr/local/bin/vim'
alias setbash='chsh -s /bin/bash'
alias reload='. ~/.zshrc'
# alias grep='egrep'
alias ls='ls -GF'
alias updatedb='sudo /usr/libexec/locate.updatedb' #for locate's sake
alias opengabi='cd ~/Developer/selenium/criancas/selenium && jasmine spec/escola.spec.js gabi'
alias startwixday='cd ~/projects/santa && git pull && npm i && grunt all --force & cd ~/projects/santa-editor && git pull && npm i && grunt all --force & cd ~/projects/wix-ck-editor && git pull && bower update && grunt all'
# calls cd, and immediately list its contents
function cs {
  cd "$@" && ls -A
}

export LSCOLORS=GxFxCxDxBxegedabagaced #better colors for ls

autoload zmv # => pg 88 Learning Shell scripting with ZSH
setopt HIST_VERIFY # !! => copy cmd from history before executing

export PATH="$PATH:$HOME/.rvm/bin:$HOME/.bin" # Add RVM to PATH for scripting

[ -s ~/.nvm/nvm.sh ] && source ~/.nvm/nvm.sh
export NVM_NODEJS_ORG_MIRROR=http://nodejs.org/dist

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#this doesn't seem to work here... need to learn more
ZDOTDIR='~/.dotFiles/zsh'

###########################################################################################################################
#reference: https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/history.zsh
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt append_history
setopt HIST_IGNORE_ALL_DUPS
setopt SHARE_HISTORY
#setopt EXTENDED_GLOB # ==> see pg 81 of Learning Shell Scripting with ZSH

#setopt csh_null_glob # ==> see pg 80 of Learning Shell Scripting with ZSH
#setopt numericglobsort # ==> see pg 84 of Learning Shell Scripting with ZSH

###########################################################################################################################
setopt COMPLETE_ALIASES
[[ -s "$HOME/.dotfiles/.aliases" ]] && source "$HOME/.dotfiles/.aliases"

###########################################################################################################################
# completion
autoload -U compinit
compinit
# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending
zstyle ':completion:*' verbose yes #pg 96 =>Learning Shell Scripting with ZSH
#zstyle ':completion:*' format %d =>pg 94 Learning Shell Scripting with ZSH
###########################################################################################################################
# Outputs current branch info in prompt format
  function my_git_prompt_info() {
   local ref
   if [[ "$(command git config --get oh-my-zsh.hide-status 2>/dev/null)" != "1" ]]; then
     ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
     ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
     echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/} $(git_prompt_status)$ZSH_THEME_GIT_PROMPT_SUFFIX"
   fi
 }

 function color_for_most_used_dirs() {
   if [[ $(pwd) =~ .*santa-edi.* ]]; then
    echo "%{[38;5;101m%}"
  elif [[ $(pwd) =~ .*santa.* ]]; then
    echo "%{[38;5;67m%}"
  elif [[ $(pwd) =~ .*wix-ck-ed.* ]]; then
    echo "%{[38;5;131m%}"
  else
    echo "%{$reset_color%}"
  fi
 }

 local ret_status="%(?:%{$fg_bold[green]%}âžœ :%{$fg_bold[red]%}âžœ%s)"
 # PROMPT='${ret_status}%{$fg_bold[green]%}%p %{$reset_color%}%5~ $(my_git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'
 PROMPT='${ret_status}%{$fg_bold[green]%}%p $(color_for_most_used_dirs)%5~ $(my_git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}( %{$fg[blue]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}) "

ZSH_THEME_GIT_PROMPT_ADDED="%{$fg[cyan]%}âœˆ"
ZSH_THEME_GIT_PROMPT_MODIFIED="%{$fg[yellow]%}âœ­"
ZSH_THEME_GIT_PROMPT_DELETED="%{$fg[red]%}âœ—"
ZSH_THEME_GIT_PROMPT_RENAMED="%{$fg[blue]%}âž¦"
ZSH_THEME_GIT_PROMPT_UNMERGED="%{$fg[magenta]%}âœ‚"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[grey]%}âœ±"

###########################################################################################################################
#SET COLORS IN MAN PAGES
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;33;246m'   # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

###########################################################################################################################
#see more iterm key binding at http://stackoverflow.com/questions/6205157/iterm2-how-to-get-jump-to-beginning-end-of-line-in-bash-shell/29403520#29403520
bindkey -e #see pg 50 of "Learning Shell Scripting with zsh"
bindkey '[C' forward-word #alt->
bindkey '[D' backward-word #alt<-
bindkey "^[[3~" delete-char-or-list #backspace
bindkey '\e[A' history-beginning-search-backward #search history match already typed ==> pg 67indkey '\e[B' history-beginning-search-forward
#bindkey '^Q' push-line-or-edit #see pg 67 of Learning Shell Scripting with ZSH
#bindkey '\eQ' push-line-or-edit #see pg 67 of Learning Shell Scripting with ZSH
