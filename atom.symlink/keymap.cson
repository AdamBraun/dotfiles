# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
'atom-workspace':
  'cmd-ctrl-alt-b': 'open-on-github:blame'
'body':
  'ctrl-h': 'pane:split-left-and-copy-active-item'
  'ctrl-l': 'pane:split-right-and-copy-active-item'
  'ctrl-j': 'pane:split-down-and-copy-active-item'
  'ctrl-k': 'pane:split-up-and-copy-active-item'
'.platform-darwin .tree-view':
  'cmd-1 1': 'tree-view:open-selected-entry-in-pane-1'
  'cmd-shift-1': 'tree-view:open-selected-entry-in-pane-1'
'.platform-darwin':
  'cmd-1': 'tree-view:toggle'
  'cmd-o': 'fuzzy-finder:toggle-file-finder'
'.platform-darwin atom-text-editor[data-grammar~=js]':
  'cmd-d': 'atom-ternjs:definition'
  'cmd-[': 'atom-ternjs:navigateBack'
