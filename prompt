#!/bin/zsh
if [[ $SET_CUSTOM_PROMPT == "true" ]]; then
    # Outputs current branch info in prompt format
      function my_git_prompt_info() {
       local ref
       if [[ "$(command git config --get oh-my-zsh.hide-status 2>/dev/null)" != "1" ]]; then
         ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
         ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
         echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/} $(git_prompt_status)$(npmlinked)$ZSH_THEME_GIT_PROMPT_SUFFIX"
       fi
     }

     function color_for_most_used_dirs() {
       if [[ $(pwd) =~ .*santa-edi.* ]]; then
        echo "%{[38;5;101m%}"
      elif [[ $(pwd) =~ .*santa.* ]]; then
        echo "%{[38;5;67m%}"
      elif [[ $(pwd) =~ .*wix-ck-ed.* ]]; then
        echo "%{[38;5;131m%}"
      else
        echo "%{$reset_color%}"
      fi
     }

     function npmlinked() {
         if [[ -d './node_modules' ]]; then
             linked=`ls -l node_modules G @ | perl -pe 's/.*?\s([-\w]*?)@.*/\1/'`
             if [[ -n $linked ]]; then
                echo "%{[38;5;13m%}@%{$reset_color%} " 
             fi
         fi
     }

    ret_status="%(?:%{$fg[green]%}âžœ :%{$fg_bold[red]%}âžœ%s)"
    PROMPT='${ret_status}%{$fg_bold[green]%}%p $(color_for_most_used_dirs)%3~ $(my_git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'

    # this blue looks damn ugly on vim embeded terminal gui colors. using something more decent!
    ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}( %{$fg[blue]%}"
    # ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}( %{$FG[111]%}"
    # ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}( %{\033[38;5;153m%}"
    ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}) "

    ZSH_THEME_GIT_PROMPT_ADDED="%{$fg[yellow]%}âœš "
    ZSH_THEME_GIT_PROMPT_MODIFIED="%{$fg[green]%}âœ­ "
    ZSH_THEME_GIT_PROMPT_DELETED="%{$fg[red]%}âœ— "
    ZSH_THEME_GIT_PROMPT_RENAMED="%{$fg[blue]%}âž¦ "
    ZSH_THEME_GIT_PROMPT_UNMERGED="%{$fg[magenta]%}âœ‚ "
    ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[cyan]%}âœ± "

    function gitprompt(){
        function git_prompt(){
            local str=$2 #local limits str variable scope
            echo -n $1 | sed 's/%{\(.*\)%}.*/\1/g' #color
            echo -n "$2 " #name of status
            echo -n "$(printf '\055%.0s' {1..20})" | head -c $(( 20 - ${#str} )) #dashes
            echo -n $1 | sed 's/%{\(.*\)%}/ \1/g' #character that represents it
        }
        git_prompt $ZSH_THEME_GIT_PROMPT_ADDED added
        git_prompt $ZSH_THEME_GIT_PROMPT_MODIFIED modified
        git_prompt $ZSH_THEME_GIT_PROMPT_DELETED deleted
        git_prompt $ZSH_THEME_GIT_PROMPT_RENAMED renamed
        git_prompt $ZSH_THEME_GIT_PROMPT_UNMERGED unmerged
        git_prompt $ZSH_THEME_GIT_PROMPT_UNTRACKED untracked
        git_prompt '%{[38;5;13m%}@' npmlinked
        unset -f git_prompt #keep global namespace clean
    }
fi
