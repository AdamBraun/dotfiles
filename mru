#!/bin/zsh
mruselect='SELECT @rn:=@rn+1 AS rank, _file, linenum 
    FROM (
      SELECT *
      FROM mru
      WHERE _file NOT LIKE '\''% %'\''
      ORDER BY ts DESC
    ) t1, (SELECT @rn:=0) t2;'
mrucmd='mysql -uroot --skip-column-names --batch -e "'${mruselect}'" mru_vim | xargs printf '\''%5s %s:%s\n'\'


mrwselect='SELECT @rn:=@rn+1 AS rank, _file, linenum 
    FROM (
      SELECT *
      FROM mrw
      WHERE _file NOT LIKE '\''% %'\''
      ORDER BY ts DESC
    ) t1, (SELECT @rn:=0) t2;'
mrwcmd='mysql -uroot --skip-column-names --batch -e "'${mrwselect}'" mru_vim | xargs printf '\''%5s %s:%s\n'\'
dbschema='CREATE DATABASE IF NOT EXISTS mru_vim;
use mru_vim;
CREATE TABLE IF NOT EXISTS mru(
    _file VARCHAR(255) NOT NULL,
    linenum INT NOT NULL DEFAULT 1,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (_file)
);


CREATE TABLE IF NOT EXISTS mrw(
    _file VARCHAR(255) NOT NULL,
    linenum INT NOT NULL DEFAULT 1,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (_file)
);'

function startMySQLIfNeeded() {
    # mysql -uroot -e status &> /dev/null || { mysql.server start && mysql -uroot -e ${dbschema} && sleep 1 } 
    mysql -uroot -e status &> /dev/null ||  mysql.server start 
}
function mru(){
    startMySQLIfNeeded
    _dbcmd=${2:-$mrucmd}
    fzfresult=$( eval $_dbcmd | fzf --no-sort --exact \
        --preview '$DOTFILES/bin/preview.rb -v {2}' \
        --preview-window 'top:50%' \
        --header 'CTRL-o - open without abort(LESS) :: CTRL-s - toggle sort :: CTRL-g - toggle preview window' \
        --bind 'ctrl-s:toggle-sort,ctrl-g:toggle-preview,ctrl-o:execute:$DOTFILES/fzf/fhelp.sh {} > /dev/tty' | sed -E 's#[^/]*(/.*$)#''\1''#' )
    filename=$(sed -E 's#(^[^:]*).*#\1#' <<< $fzfresult)
    if [[ -f $filename ]]; then
        if [[ $fzfresult =~ ':[[:digit:]]+$' ]]; then
            linenum=$(sed 's#^[^:]*:#+#' <<< $fzfresult)
        fi
        #cd into directory of file (usage: "mru 1")
        if [[ $1 -eq 1 ]]; then
            skipnvm=1
            cd $(sed -E 's#(.*)/[^/]+#\1#' <<< $filename)
            git rev-parse --show-toplevel && cd $(git rev-parse --show-toplevel)
            skipnvm=0
            [[ $(type nvm) != 'nvm not found' ]] && nvm_auto_switch
        fi
        if [[ $HAS_LOADED != 1 ]]; then
            loadall
        fi
        #open selected file in vim AND cd into git's root folder for project of selected file
        echo  vim $linenum $filename -c 'silent :CDR'
        vim $linenum $filename -c 'silent :CDR'
    fi
}
function oldmru(){
    mrufile=${2:-.mru}
    if [[ ! -f $HOME/$mrufile ]]; then
        echo $HOME/$mrufile does not exist
        return
    fi
    #print file inverse order(tail) | put line numbers (nl) | fzf with sorting | remove line number from selected file (sed)
    fzfresult=$(tail -r $HOME/$mrufile | nl | fzf --no-sort --exact \
        --preview 'echo {} | sed -E '\''s#^[^/]*##'\'' | xargs $DOTFILES/bin/preview.rb -v' \
        --preview-window 'top:50%' \
        --header 'CTRL-o - open without abort(LESS) :: CTRL-s - toggle sort :: CTRL-g - toggle preview window' \
        --bind 'ctrl-s:toggle-sort,ctrl-g:toggle-preview,ctrl-o:execute:$DOTFILES/fzf/fhelp.sh {} > /dev/tty' | sed -E 's#[^/]*(/.*$)#''\1''#')
    filename=$(sed -E 's#(^[^:]*).*#\1#' <<< $fzfresult)
    if [[ -f $filename ]]; then
        if [[ $fzfresult =~ ':[[:digit:]]+$' ]]; then
            linenum=$(sed 's#^[^:]*:#+#' <<< $fzfresult)
        fi
        #cd into directory of file (usage: "mru 1")
        if [[ $1 -eq 1 ]]; then
            cd $(sed -E 's#(.*)/[^/]+#\1#' <<< $filename)
            echo $(sed -E 's#(.*)/[^/]+#\1#' <<< $filename)
        fi
        #open selected file in vim AND cd into git's root folder for project of selected file
        vim $linenum $filename -c 'silent :CDR'
    fi
}
function mrw(){
    mru 0 $mrwcmd
}
function ideamru() {
    mru 1 $DOTFILES/js-helpers/ideamru/ideamru.js
}
alias 1m='mru 1'
alias 1w='mrw'
function 1m1() {
    startMySQLIfNeeded
    filepath=$(mysql -uroot --skip-column-names --batch -e "SELECT _file FROM mru ORDER BY ts DESC LIMIT 1;" mru_vim )
    cd $(sed -E 's#(.*)/.+#\1#' <<< $filepath)
    echo $(sed -E 's#(.*)/.+#\1#' <<< $filepath)
}
alias cdm='1m1'
function removeMruInvalidEntries(){
    for f in mru mrw
    do
        mysql -uroot --skip-column-names --batch -e "select _file from "$f";" mru_vim > /tmp/tmpmru
        while read line; do
            currFileName=$(sed -E 's/^([^:]*).*/\1/' <<< $line)
            if [[ ! -f $currFileName ]]; then
                echo removing $currFileName  from $f
                mysql -uroot -e "delete from "$f" where _file='"$currFileName"';" mru_vim
            fi
        done < /tmp/tmpmru
        rm /tmp/tmpmru
    done
}
